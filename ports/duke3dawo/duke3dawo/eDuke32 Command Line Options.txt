EDuke32 Parameters
Usage: eduke32 [files] [options]
Example: eduke32 nukeland.map -usecwd -cfg myconfig.cfg

Files can be of types {grp | zip | pk3 | pk4 | map | con | def | rts}.

Specifying a {grp|zip|pk3|pk4} file is equivalent to using the -g parameter.
If a .map file is specified, it is immediately loaded and launched as a usermap (equivalent to -map).
If a .con file is specified, it replaces GAME.CON (equivalent to -x).
If a .def file is specified, it is used as the main DEF file (equivalent to -h).
If a .rts file is specified, it is used as the main RTS soundbank (equivalent to -rts).
Parameter	Description	Notes	
-?
--help	Displays a help message listing the available parameters, then exits.	
-addon {0,1,2,3}	Launch one of the addons for Duke 3D (if present), packaged with the Megaton Edition release.	0 = none, 1 = Duke it out in D.C., 2 = Duke: Nuclear Winter, 3 = Duke Caribbean: Life's a Beach
-cachesize [size]	Sets initial cache size, in kilobytes. Usually not needed, as cache size is adjusted dynamically.	See also cachesize (DEF).
-cfg [cfg_path]	Use an alternate configuration file.	Default is "eduke32.cfg".
-clipmap [file.map]	Load an additional clipping map to define physical geometry for sprites, voxels and 3d models, for use with clipshape	Default is _clipshape0.map.
-d [file.edm][:arg1,arg2]	Plays an eduke32 demo. Can take optional parameters "arg1" and "arg2" which represent "frames per tic" and "number of repeats" respectively, and are used for debug performance profiling.	By default, the game plays a loop starting at edemo001.edm.
-debughelp	Displays debug parameters and exits.	
-forcegl	Disables GL driver blacklist on Windows.	
-game_dir [dir]	Duke3d_w32 compatibility option. Set the directory from which to load files, which also changes where the cfg is created.	See also '-j'
-gamegrp [file.grp]	Defines which file to use as main grp.	
-grp [path]
-g [path]	Use an extra group (or .pk3 or .zip) file to load data from.	
-h [file.def]	Specify the main DEF file.	By default uses 'duke3d.def' if present in the folder.
-j [dir]	Adds a directory to EDuke32's search list. Does not alter the directory for config files.	
-map [file.map]	Starts the specified usermap on launch.	
-mh [file.def]	Include an additional DEF module, appended after the main DEF code.	
-mx [file.con]	Include an additional CON script module, appended after the GAME.CON code.	
-m	Disable monsters (m_monsters_off = 1) and sets m_player_skill and player_skill to 0.	
-nam
-napalm
-ww2gi	Run in NAM or WWII GI -compatible mode.	
-noautoload	Disables loading content from the autoload directory.	
-nodinput	Disable DirectInput (joystick) support.	
-noinstancechecking	Prevents eduke32 from checking whether another instance is already running.	
-nologo
-quick	Skip all the startup animations and logos.	
-nosteam	Disables Steam community API integrations (such as achievements) if binary is compiled with parameter EDUKE32_STANDALONE.	Currently only relevant for Ion Fury builds.
-ns -nm	Disable sound and music respectively.	
-r	Enables demo recording.	
-rotatesprite-no-widescreen	Debug parameter. If set, screen tiles (such as weapons) logos and menu tiles will be stretched horizontally.	
-s#	Set the skill level (0-4). Cannot exceed 4 even when more skill levels are defined. Setting this to 4 is hardcoded to enable respawn_monsters and m_respawn_monsters, regardless of what the skill itself defines.	
-setup
-nosetup	Enables/disables startup window	[only on Windows, SDL, and/or GTK2 environments]
-t#	Set respawn mode: 1 = Monsters, 2 = Items, 3 = Inventory, x = All	
-usecwd	Force eduke32 to read game data and configuration files from working directory.	See also user_profiles_disabled.
-u#########	Define the weapon switch order, as a string of 10 digits.	(Default: 3425689071)
-v[X] -l[Y]	Warp to episode X, level Y if used together. If either is omitted, then warp assumes episode 1, resp. level 1.	
-w	Show coordinates as well as other debug information, including current sector num, lotag and hitag.	
-x [game.con]	Replace the main GAME.CON with the specified script file.	
-z#
-condebug	Enable line-by-line CON compile debugging at level #, and print the number of labels, variables and arrays used.