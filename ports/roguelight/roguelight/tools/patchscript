#!/bin/bash
# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR/assets"
export DATAFILE="game.port"
export LD_LIBRARY_PATH="/usr/lib:$GAMEDIR/lib:$GAMEDIR/tools/libs:$LD_LIBRARY_PATH"
export SDL_GAMECONTROLLERCONFIG="$sdl_controllerconfig"
export TOOLDIR="$GAMEDIR/tools"
export TMPDIR="$GAMEDIR/tmp"
export PATH="$GAMEDIR/tools:$PATH"

# Permissions
chmod 666 /dev/uinput
chmod 777 "$TOOLDIR/7zzs"

cd "$GAMEDIR"

unzip_exe() {
	if [ -f "$GAMEDIR/Roguelight.exe" ]; then
    # Calculate the MD5 checksum of Mezzer.exe
    actual_checksum=$(md5sum "$GAMEDIR/Roguelight.exe" | awk '{print $1}')

    # Check if the file exists and the checksum matches
    if [ "$actual_checksum" = "63f6f3acb59133fb95e2ec88520289c4" ]; then
        # Use 7zip to extract the .exe file to the destination directory
        "$TOOLDIR/7zzs" x "$GAMEDIR/Roguelight.exe" -o"$DATADIR" & pid=$!

        # Wait for the extraction process to complete
        wait $pid

        # Check if Roguelight.exe file exists
        if [ -f "$DATADIR/Roguelight.exe" ]; then
            # Delete the files
            rm -rf $DATADIR/*.exe $DATADIR/*.dll $DATADIR/*.mp3 $DATADIR/.gitkeep $GAMEDIR/Roguelight.exe $GAMEDIR/"Place Roguelight.exe here.txt"
        fi
    else
        echo "Error: MD5 checksum of Roguelight.exe does not match the expected checksum."
        exit 1
    fi
else
    echo "Roguelight.exe not detected in /roguelight."
fi
}

apply_xdelta() {
    # Check if the data.win file exists and apply xdelta
    if [ -f "$DATADIR/data.win" ]; then
        output=$(xdelta3 -d -s "$DATADIR/data.win" -f "./tools/patch/roguelight.xdelta" "$DATADIR/game.droid" 2>&1)
        if [ $? -eq 0 ]; then
            echo "Patch applied successfully"
            echo "$output"
            rm "$DATADIR/data.win"
        else
            echo "Failed to apply patch"
            echo "$output"
            exit 1
        fi
    else
        echo "No data.win file found to patch!"
    fi
}

zip_archive() {
        zip -r -0 $DATAFILE ./assets/
        rm -rf ./assets
        mkdir -p saves
}

process_game() {
	unzip_exe
    echo "Removed unnecessary files"
	sleep1
    echo "Applying xdelta patch"
    apply_xdelta
	sleep 1
    echo "Finishing up..."
    zip_archive
    sleep 1
	
    # Final completion message
    echo "Patching process complete!"
}

# Call the function
process_game