#!/bin/bash

# Set the log file
LOGFILE="$PATCHDIR/patchlog.txt"

# Redirect output and error to the log file
> "$LOGFILE" && exec > >(tee "$LOGFILE") 2>&1

echo "PATCHDIR is set to: $PATCHDIR"

# Exports
export TOOLDIR="$PATCHDIR/tools"
export TMPDIR="$PATCHDIR/tmp"
export PATH=$PATH:TOOLDIR
export LD_LIBRARY_PATH="/usr/lib:$PATCHDIR/libs:$TOOLDIR/libs:$LD_LIBRARY_PATH"

# Permissions
chmod 777 "$TOOLDIR/gmKtool.py"
chmod 777 "$TOOLDIR/oggdec"
chmod 777 "$TOOLDIR/oggenc"
chmod 777 "$TOOLDIR/xdelta3"

cd "$PATCHDIR"

process_game() {
    # Define files to delete
    local files_to_delete=(
      "./gamedata/Galaxy.dll"
      "./gamedata/gc.dll"
      "./gamedata/GOG.gml.dll"
      "./gamedata/gog.ico"
      "./gamedata/goggame-1824443868.hashdb"
      "./gamedata/goggame-1824443868.ico"
      "./gamedata/goggame-1824443868.info"
      "./gamedata/goggame-galaxyFileList.ini"
      "./gamedata/goglog.ini"
      "./gamedata/ITTA_WORKBUILD_FINAL.exe"
      "./gamedata/Launch ITTA.lnk"
      "./gamedata/support.ico"
      "./gamedata/unins000.dat"
      "./gamedata/unins000.exe"
      "./gamedata/unins000.ini"
      "./gamedata/unins000.msg"
      "./gamedata/steam_api.dll"
    )

    # Delete unnecessary files
    for file in "${files_to_delete[@]}"; do
        if [ -f "$file" ]; then
            rm "$file"
            echo "Deleted $file"
        else
            echo "$file not found"
        fi
    done

    # If "gamedata/data.win" exists and matches the checksum of the GOG or Steam versions
    if [ -f "./gamedata/data.win" ]; then
        checksum=$(md5sum "./gamedata/data.win" | awk '{print $1}')
    
        # Checksum for the GOG version
        if [ "$checksum" = "e5bb80d835357f18e3678d472dac459f" ]; then
            $ESUDO tools/xdelta3 -d -s gamedata/data.win -f ./patch/gogitta.xdelta gamedata/game.droid && \
            rm gamedata/data.win
            echo "GOG data.win has been patched"
        # Checksum for the Steam version
        elif [ "$checksum" = "89c5c41dc8c6cafeb3851e594d42d74b" ]; then
            $ESUDO tools/xdelta3 -d -s gamedata/data.win -f ./patch/steamitta.xdelta gamedata/game.droid && \
            rm gamedata/data.win
 	        echo "Steam data.win has been patched"
        else
            echo "Error: MD5 checksum of data.win does not match any expected version."
	    exit 1
        fi
    else    
        echo "Error: Missing data.win in gamedata folder or game has been patched."
    fi

# Compress audio
if [ -f "$PATCHDIR/compress.txt" ]; then
    echo "Compressing audio. The process will take 5-10 minutes"  > $CUR_TTY
    mkdir -p "$TMPDIR"
    ./tools/gmKtool.py -vvv -m 1000 -b 64 -d "$TMPDIR" "$PATCHDIR/gamedata/game.droid"

    if [ $? -eq 0 ]; then
        echo "Compression completed successfully."
	mv $TMPDIR/* "$PATCHDIR/gamedata"
        rm "$PATCHDIR/compress.txt"
        rmdir "$TMPDIR"
        echo "Audio compression applied successfully." > $CUR_TTY
    else
        echo "Audio compression failed." > $CUR_TTY
        rm -rf "$TMPDIR"
    fi

    sleep 3

    # Find and compress all .ogg files in the /gamedata directory
    find "$PATCHDIR/gamedata" -type f -name "*.ogg" | while read -r file; do
    # Create a temporary file for the compressed version
    temp_file="${file%.ogg}_temp.ogg"

    # Decode the .ogg file and encode it with the specified bitrate
    "$TOOLDIR/oggdec" -o - "$file" | "$TOOLDIR/oggenc" -b 64 -o "$temp_file" -
    if [ $? -eq 0 ]; then
        # Replace the original file with the compressed version if successful
        mv "$temp_file" "$file"
        echo "Compressed: $file to 64 kbps"
    else
        echo "Failed to compress: $file" >&2
        rm -f "$temp_file" # Clean up the temp file in case of error
    fi
    done
	
    echo "All .ogg files have been processed."
fi    
    sleep 3    

    # Check for .ogg files and move to APK
    if [ -n "$(ls ./gamedata/*.ogg 2>/dev/null)" ]; then
        mkdir -p ./assets
        mv ./gamedata/*.ogg ./assets/
        echo "Moved .ogg files to ./assets/"

        zip -r -0 ./itta.apk ./assets/
        echo "Zipped contents to ./itta.apk"

        rm -rf ./assets
        echo "Deleted assets directory"
    else
        echo "No .ogg files found"
    fi
}

# Call the function
process_game
